CREATE TABLE users(
  id INT PRIMARY KEY,
  name VARCHAR(20)
);

CREATE TABLE  projects (
  id INT PRIMARY KEY,
  name VARCHAR(50),
  status TINYINT(1) DEFAULT 0
);

CREATE TABLE technologies (
  
  id INT PRIMARY KEY,
  name VARCHAR(50)
);

CREATE TABLE projects_users (
  project_id INT,
  user_id INT,
  status TINYINT(1) NOT NULL DEFAULT 0
  FOREIGN KEY (project_id) REFERENCES projects(id),
  FOREIGN KEY (user_id) REFERENCES users(id)
);


CREATE TABLE projects_technologies (
  project_id INT,
  technology_id INT,
  FOREIGN KEY (project_id) REFERENCES projects(id),
  FOREIGN KEY (technology_id) REFERENCES technologies(id),
  PRIMARY KEY (project_id, technology_id)
);


INSERT INTO users VALUES (1,"User A"), (2,"User B"), (3,"User C"), (4,"User D");
INSERT INTO projects VALUES (1, 'P1', 0), (2, 'P2', 0), (3, 'P3', 0), (4, 'P4', 0), (5, 'P5', 1), (6, 'P6', 1), (7, 'P7', 0), (8, 'P8', 0), (9, 'P9', 0);
INSERT INTO technologies VALUES (1, 'HTML'), (2, 'Javascript'), (3, 'Ruby'), (4, 'Rails'), (5, 'IOS'), (6, 'Android');

INSERT INTO projects_users VALUES (1, 1, 0), (1, 2, 0), (1, 3, 0), (1, 6, 1), (2, 1, 0), (2, 3, 0), (2, 7, 0), (2, 9, 0), (3, 1, 0), (3, 8, 0), (3, 9, 0), (3, 2, 0), (4, 1, 0), (4, 2, 0), (4, 4, 0), (4, 5, 1), (4, 6, 1);

INSERT INTO projects_technologies VALUES (1, 1), (1, 2), (1, 3), (1, 4), (2, 5), (3, 6), (4, 5), (4, 6), (5, 3), (5, 4), (6, 6), (6, 1), (6, 2), (7, 5), (7, 6), (8, 1), (8, 2), (8, 3), (8, 4), (8, 6), (9, 5);



1) Find names of all employees currently not working in any projects. (Use joins)

SELECT * FROM users WHERE id NOT IN (SELECT id from users LEFT JOIN projects_users ON users.id=projects_users.user_id WHERE projects_users.status=1)


2) Find all employees who have exposure to HTML, Javascript and IOS.

SELECT distinct users.* from users
JOIN projects_users ON users.id=projects_users.user_id
JOIN projects_technologies on projects_users.project_id= projects_technologies.project_id
JOIN technologies on technologies.id= projects_technologies.technology_id
WHERE technologies.name IN ('HTML', 'Javascript','IOS')



3) Find the technologies in which a particular employee(Say B) has expertise(3 or more projects)

SELECT * from technologies where technologies.id IN (SELECT technology_id FROM projects_users, projects_technologies WHERE projects_users.project_id=projects_technologies.project_id AND user_id=2 GROUP BY technology_id HAVING count(projects_users.project_id)>=3);


4) Find the employee who has done most no of projects in android.

SELECT tt1.name FROM (SELECT users.*, count(*) as users_count FROM users
LEFT JOIN projects_users ON users.id=projects_users.user_id
LEFT JOIN projects ON projects.id= projects_users.project_id
LEFT JOIN projects_technologies ON projects.id= projects_technologies.project_id
LEFT JOIN technologies ON technologies.id= projects_technologies.technology_id
WHERE technologies.name='Android' GROUP BY users.id ORDER BY users_count DESC) AS tt1
JOIN (SELECT users.*, count(*) as users_count FROM users
LEFT JOIN projects_users ON users.id=projects_users.user_id
LEFT JOIN projects ON projects.id= projects_users.project_id
LEFT JOIN projects_technologies ON projects.id= projects_technologies.project_id
LEFT JOIN technologies ON technologies.id= projects_technologies.technology_id
WHERE technologies.name='Android' GROUP BY users.id ORDER BY users_count DESC LIMIT 1) AS tt2
ON tt1.users_count = tt2.users_count
