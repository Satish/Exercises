CREATE TABLE users(
  id INT PRIMARY KEY,
  name VARCHAR(20)
);

CREATE TABLE  friends (
  user_id INT,
  friend INT,
  PRIMARY KEY(user_id,friend),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (friend) REFERENCES users(id)
);

CREATE TABLE images (
  id INT PRIMARY KEY,
  image_user INT,
  FOREIGN KEY (image_user) REFERENCES users(id)
);

CREATE TABLE tags (
  image_id INT,
  tagged INT,
  FOREIGN KEY (image_id) REFERENCES images(id),
  FOREIGN KEY (tagged) REFERENCES users(id),
  PRIMARY KEY (image_id, tagged)
);


INSERT INTO users VALUES (1,"Satish"), (2,"Akhil"), (3,"Sushant"), (4,"Priyank"), (5,"Nishant"), (6,"Gaurav"), (7,"Aayush");
INSERT INTO friends VALUES (1,2), (1,3), (1,4), (1,5), (1,6), (1,7), (2,4), (2,3), (3,4), (3,5), (4,7), (6,7), (5,7);
INSERT INTO images VALUES(1,1), (2,1), (3,2), (4,2), (5,4), (6,4), (7,7), (8,4), (9,4), (10,6);
INSERT INTO tags VALUES (1,1), (3,1), (1,2), (10,2), (5,2), (3,2), (4,3), (8,3), (2,4), (1,4), (1,6), (1,5), (3,7), (3,6), (3, 3);


1) Find image that has been tagged most no of times.

SELECT tt1.* from (SELECT image_id, count(*) AS tags_count FROM tags GROUP BY image_id ORDER BY count(*) DESC) as tt1
JOIN (SELECT image_id, count(*) AS tags_count FROM tags GROUP BY image_id ORDER BY count(*) DESC LIMIT 1) as tt2
ON tt1.tags_count = tt2.tags_count

2) Find all images belonging to the friends of a particular user.

SELECT images.* FROM images WHERE image_user IN (SELECT friend FROM friends WHERE user_id = 1);

OR

SELECT images.* FROM images INNER JOIN friends ON images.image_user=friends.friend WHERE user_id = 1;